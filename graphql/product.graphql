scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

extend type Query {
     products(filter: ProductFilter): [Product!]! @paginate(scopes: ["filter"])
     verifyProductOwnership(slug: String): Product @middleware(checks: ["auth:api"]) @field(resolver:"Product\\VerifyOwnership")
#     ownProducts: [Product!]! @middleware(checks: ["auth:api"]) @paginate(defaultCount: 10,scopes:["filter"])
}

extend type Mutation @middleware(checks: ["auth:api"]){
    addProduct(input:CreateProduct !@spread): Product @field(resolver:"Product\\Create") @inject(context: "user.id", name: "user_id")
    updateProduct(id: ID!,input:UpdateProduct @spread): Product @can(ability:"update",injectArgs: true,find:"id") @field(resolver:"Product\\Update")
    deleteProduct(id: ID!): Product @can(ability:"delete",injectArgs: true,find:"id") @delete
    sold(id: ID!): Product @can(ability:"update",injectArgs: true,find:"id") @field(resolver:"Product\\Sold")
    upload(file: Upload!): Media @field(resolver:"Media\\Create")
}

input CreateProduct{
    name: String! @rules(apply: ["string"])
    address: String @rules(apply: ["string"])
    cover_image: Int!
    gallery_images: String
    cat_id: Int! @rules(apply: ["exists:product_categories,id"])
    description: String

}

type Media {
    id: ID!
    path: String!
    relative_path: String!,
    category: String!
    subject_type: String!
    created_at: DateTime
    updated_at: DateTime

}

input UpdateProduct{
    name: String
    description: String
    address: String
    cat_id: Int @rules(apply: ["exists:product_categories,id"])
    description: String
    cover_image: Int
    gallery_images: String
    used_for: String
}



input ProductFilter {
    sold: Boolean,
    search: String,
    slug: String,
    catId: Int,
    latest: Boolean
}


type Product {
    id: ID!
    slug: String!
    name: String!
    description: String
    address: String!
    used_for: String!
    home_delivery: String!
    is_available: Int!
    user: User
    category: ProductCategory
    cat_id: Int!
    media: [Media]
    created_at: DateTime
    updated_at: DateTime
}
